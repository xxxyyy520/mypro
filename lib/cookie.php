<?php 
/**
+---------------------------------------------------------------------------------------------------------------
* 对Cookie的封装，便于Http会话信息的统一控制
+---------------------------------------------------------------------------------------------------------------
* @date    2008-05-27
* @oicq    28683
* @author  杰夫 <darqiu@gmail.com>
* @version 2.0
+---------------------------------------------------------------------------------------------------------------
*/
class cookie
{//类定义开始
    
	/**
	+----------------------------------------------------------
	* 数据加密对象
	+----------------------------------------------------------
	* @var object
	* @access public
	+----------------------------------------------------------
	*/

	Public $secure = null;
	/**
	+----------------------------------------------------------
	* cookie 过期时间
	+----------------------------------------------------------
	* @var integer
	* @access public
	+----------------------------------------------------------
	*/
	Public $expire = '0';
	
	/**
	+----------------------------------------------------------
	* cookie 保存路径
	+----------------------------------------------------------
	* @var string
	* @access public
	+----------------------------------------------------------
	*/	
	Public $path   = '/';
	
	/**
	+----------------------------------------------------------
	* cookie 所在域名
	+----------------------------------------------------------
	* @var string
	* @access public
	+----------------------------------------------------------
	*/
	Public $domain = '';
	
	/**
	+----------------------------------------------------------
	* cookie 前缀
	+----------------------------------------------------------
	* @var string
	* @access public
	+----------------------------------------------------------
	*/
	Public $cookiePre = '';
	
	/**
	+----------------------------------------------------------
	* 构造子(默认构造器方便工厂加载)
	+----------------------------------------------------------
	* @access public function
	+----------------------------------------------------------
	*/
	public function __construct()
	{
	}
	
	/**
	+----------------------------------------------------------
	* 根据Key取得HttpCookie中的value
	+----------------------------------------------------------
	* @access public function
	+----------------------------------------------------------
	* @param string $key  键名
	+----------------------------------------------------------
	* @return mixed
	+----------------------------------------------------------
	*/
	public function get($key)
	{
		if(isset($_COOKIE[$this->cookiePre."_".$key]) && $_COOKIE[$this->cookiePre."_".$key])
		{
			return (is_object($this->secure)) ? $this->secure->decrypt($_COOKIE[$this->cookiePre."_".$key]) : $_COOKIE[$this->cookiePre."_".$key];  //数据解密
		}
		else
		{
			return null;
		}
	}
	
	/**
	+----------------------------------------------------------
	* 放入指定的Key和value到HttpCookie，如果存在同名键名，则覆盖
	* 如果存在的话返回之前的值
	+----------------------------------------------------------
	* @access public function
	+----------------------------------------------------------
	* @param string $key   键名
	* @param string $value 键值
	+----------------------------------------------------------
	* @return mixed
	+----------------------------------------------------------
	*/	
	public function set($key,$value)
	{
		if(is_object($this->secure)) $value = $this->secure->encrypt($value);    //数据加密
		if($this->expire=="0"){$expire='0';}else{$expire=time()+$this->expire;}
		setcookie($this->cookiePre."_".$key,$value,$expire,$this->path,$this->domain);
	}
	
	/**
	+----------------------------------------------------------
	* 移出HttpCookie中指定的键名value
	* 返回移除的值
	+----------------------------------------------------------
	* @access public
	+----------------------------------------------------------
	* @param mixed $key 键名
	+----------------------------------------------------------
	* @return string
	+----------------------------------------------------------
	*/
	public function remove($key)
	{
		$value = $this->get($this->cookiePre."_".$key);
		if(!is_null($value))
		{
			//unset($_COOKIE[$this->cookiePre."_".$key]);
			$this->set($this->cookiePre."_".$key,'');
		}
		//return $value;
	}
	
	/**
	+----------------------------------------------------------
	* 显示所有cookie信息
	+----------------------------------------------------------
	* @access public function
	+----------------------------------------------------------	
	*/
	public function displayCookies()
	{
		print_r($_COOKIE);
	}
	
	/**
	+----------------------------------------------------------
	* 删除所有键值对,清空会话信息
	+----------------------------------------------------------
	* @access public function
	+----------------------------------------------------------	
	*/
	public function dispose()
	{
		foreach($_COOKIE as $key => $val)
		{
			$dataKey[] = $key;
		}
		for($i=0; $i < count($dataKey); $i++)
		{
			$cookieName = strtolower(substr($dataKey[$i],(strrpos($dataKey[$i],'_'))+1));
			$this->set($cookieName,"");
		}
	}
}//类定义结束
?>